# Generated by Django 2.2.9 on 2020-01-10 02:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='GUID of this game')),
                ('is_draw', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='GUID of this player')),
                ('attack', models.IntegerField(help_text='Attack point of this player')),
                ('defense', models.IntegerField(help_text='Defense point of this player')),
                ('agility', models.IntegerField(help_text='Agility point of this player')),
                ('hp', models.IntegerField(help_text='Current health point of this player')),
            ],
        ),
        migrations.CreateModel(
            name='Move',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('if_statement', models.CharField(choices=[('operating_player.attack > opponent_player.attack', 'Your attack is higher than your opponent'), ('operating_player.hp > 20', 'Your HP is higher than 20'), ('operating_player.defense == 0', 'You have no defense')], help_text='Executable if statement', max_length=65534)),
                ('then_statement', models.CharField(choices=[('operating_player.attack = operating_player.attack + 5', 'Your attack will be increased by 5'), ('opponent_player.hp = opponent_player.hp + opponent_player.defense - operating_player.attack', 'You will attack your opponent')], help_text='Executable then statement', max_length=65534)),
                ('game', models.ForeignKey(help_text='The game that this move happens in', on_delete=django.db.models.deletion.CASCADE, to='halfhalf.Game')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='loser',
            field=models.ForeignKey(blank=True, help_text='Loser of the game', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lost_games', to='halfhalf.Player'),
        ),
        migrations.AddField(
            model_name='game',
            name='player1',
            field=models.ForeignKey(help_text='Player 1 of this game', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='halfhalf.Player'),
        ),
        migrations.AddField(
            model_name='game',
            name='player2',
            field=models.ForeignKey(help_text='Player 2 of this game', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='halfhalf.Player'),
        ),
        migrations.AddField(
            model_name='game',
            name='winner',
            field=models.ForeignKey(blank=True, help_text='Winner of the game', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='won_games', to='halfhalf.Player'),
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='GUID of this character')),
                ('exp', models.IntegerField(default=1, help_text='Total experience of this player')),
                ('level', models.IntegerField(default=1, help_text='Level of this player')),
                ('hp', models.IntegerField(default=20, help_text='Total health points of this player')),
                ('talent_points', models.IntegerField(default=20, help_text='Total available talent points of this player')),
                ('user', models.ForeignKey(help_text='The user this player represents', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
